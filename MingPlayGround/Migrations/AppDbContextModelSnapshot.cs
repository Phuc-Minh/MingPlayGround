// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MingPlayGround.Data;

#nullable disable

namespace MingPlayGround.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MingPlayGround.Models.ConjunctionModels.MuscleGroup_Exercice", b =>
                {
                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciceId")
                        .HasColumnType("int");

                    b.HasKey("MuscleGroupId", "ExerciceId");

                    b.HasIndex("ExerciceId");

                    b.ToTable("MuscleGroups_Exercices");
                });

            modelBuilder.Entity("MingPlayGround.Models.Exercice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DurationSecondes")
                        .HasColumnType("int");

                    b.Property<int>("ExerciceType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("Repetitions")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exercices");
                });

            modelBuilder.Entity("MingPlayGround.Models.MuscleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MuscleGroups");
                });

            modelBuilder.Entity("MingPlayGround.Models.ConjunctionModels.MuscleGroup_Exercice", b =>
                {
                    b.HasOne("MingPlayGround.Models.Exercice", "Exercice")
                        .WithMany("MuscleGroup_Exercices")
                        .HasForeignKey("ExerciceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MingPlayGround.Models.MuscleGroup", "MuscleGroup")
                        .WithMany("MuscleGroup_Exercices")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercice");

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("MingPlayGround.Models.Exercice", b =>
                {
                    b.Navigation("MuscleGroup_Exercices");
                });

            modelBuilder.Entity("MingPlayGround.Models.MuscleGroup", b =>
                {
                    b.Navigation("MuscleGroup_Exercices");
                });
#pragma warning restore 612, 618
        }
    }
}
